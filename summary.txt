vue核心插件：vue-router、 vuex、 vue服务端渲染

1、二级路由  写在一级路由children下，值为对象数组，path的值不带"/"(可以理解为"/"是一级路由的标志)，其余属性与一级路由一致。

2、vue可在本地配置跨域请求：
	在配置文件里设置proxyTable值即可proxyTable: {
         					'/api': {
         					target: 'http://test-a.vintop.cn/', // 要访问的接口域名
         					changeOrigin: true,  // 必须开启
        					 pathRewrite: {
          						 '^/api': '/'
        						 }
      						 }
	配置完成后在调接口时用法："/api" + 接口具体地址

3、vue发送http请求需借助 vue-resource 完成，this.$http.get(url).then(function(res){
		// 成功回调
	},function(res){
		// 失败回调
	})

4、组件之间通信
	父子组件间通信：
		父 => 子      父组件通过在引入的子组件内 将数据绑定到自定义属性上（v-bind:属性名）传递给子组件
			      子组件通过 props 父组件的自定义属性 获取父组件中该自定义属性对应的数据  props["父组件自定义属性1", ...]

		子 => 父      子组件通过触发 $emit 方法将数据传递给父组件  this.$emit("name1", str/{}/[])
			      父组件接收值：在引入的子组件上绑定子组件的 v-on:name1="func" 自定义事件 ，其值为方法 用于接收子组件传来的值

5、vuex用于兄弟组件之间共享数据，临时的状态管理，页面刷新保存的数据清除

6、通过vue的watch方法可以监听路由的变化，从而动态更改页面的状态（解决浏览器的前进、后退时，样式的同步更新）

7、动态路由 通过在路由后面加上参数来展示相应的页面 如 /:d

8、接收url参数

	1) 路由配置传参方式
		在配置路由时 例如 "/firewall/authorize/:uid/:uname/:token"
		页面url为 http://XXX.com/firewall/authorize/23/zhangman/232454

		js 接收方式 this.$route.params.uid,
	2) ?传参方式
		例 http://XXX.com/firewall/authorize?uid=12&uname=zhangman&token=23243
		js 接收方式 this.$route.query.uid

9、将 router 的 mode 设为 history 可以去掉一直带着的的 "#" ，vue-router 默认是 hash 模式

10、vue无法通过location.search获取 ？及其后面的参数